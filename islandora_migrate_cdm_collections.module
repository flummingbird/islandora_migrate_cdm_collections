<?php

/**
 * @file
 * The main Islandora CONTENTdm Collection Migrator file.
 */

/**
 * Ingest an Islandora collection object.
 *
 * @param string $namespace
 *   The Fedora namespace to use for this object.
 * @param array $collection
 *   The configuration data for one CONTENTdm collection.
 */
function islandora_migrate_cdm_collections_ingest_collection($namespace = 'islandora', $parent = 'islandora:root',
  $input_path = '/tmp/collections/collection_data.tsv', $collection_data = array())  {
  try {
    $tuque = new IslandoraTuque();
    $repository = $tuque->repository;
    $collection_object = $repository->constructObject($namespace);
    $collection_object->label = $collection_data[1];

    $collection_policy_xml = <<<EOCP
<collection_policy xmlns="http://www.islandora.ca" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="$collection_data[1]" xsi:schemaLocation="http://www.islandora.ca http://syn.lib.umanitoba.ca/collection_policy.xsd">
<content_models/>
<search_terms/>
<staging_area/>
<relationship>isMemberOfCollection</relationship>
</collection_policy>
EOCP;

    // Add the COLLECTION_POLICY ds.
    $coll_policy_datastream = $collection_object->constructDatastream('COLLECTION_POLICY', 'M');
    $coll_policy_datastream->label = 'CoLlection policy';
    $coll_policy_datastream->mimetype = 'text/xml';
    $coll_policy_datastream->setContentFromString($collection_policy_xml);
    $collection_object->ingestDatastream($coll_policy_datastream);

    // Add the DC ds.
    if (count($collection_data) > 2 && strlen($collection_data[2])) {
      $collection_description = $collection_data[2];
    }
    else {
      $collection_description = '';
    }
    $dc_xml = <<<EODC
<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">
<dc:title>$collection_data[1]</dc:title>
<dc:identifier>$collection_object->pid</dc:identifier>
<dc:description>$collection_description</dc:description>
</oai_dc:dc>
EODC;

    $dc_datastream = $collection_object->constructDatastream('DC', 'M');
    $dc_datastream->label = 'Dublin Core Record for this object';
    $dc_datastream->mimetype = 'text/xml';
    $dc_datastream->setContentFromString($dc_xml);
    $collection_object->ingestDatastream($dc_datastream);

    // Add thumbnail ds. If we don't have thumbnails in the input data,
    // use the image provided by the collection solution pack.
    $tn_datastream = $collection_object->constructDatastream('TN', 'M');
    if (count($collection_data) > 2 && strlen($collection_data[3])) {
      $input_path_dirname = dirname($input_path);
      $path_to_thumbnail = $input_path_dirname . DIRECTORY_SEPARATOR .
        $collection_data[0] . DIRECTORY_SEPARATOR . trim($collection_data[3]);
      if (!file_exists($path_to_thumbnail)) {
        $path_to_thumbnail = drupal_get_path('module', 'islandora_basic_collection') .
          '/images/folder.png';
      }
    }
    else {
      $path_to_thumbnail = drupal_get_path('module', 'islandora_basic_collection') .
        '/images/folder.png';
    }
    $mime_detector = new MimeDetect();
    $tn_datastream->mimetype = $mime_detector->getMimetype($path_to_thumbnail);
    $tn_datastream->label = 'Thumbnail';
    $tn_datastream->setContentFromFile($path_to_thumbnail);
    $collection_object->ingestDatastream($tn_datastream);

    // Add relationships.
    $rels = $collection_object->relationships;
    $rels->add('info:fedora/fedora-system:def/relations-external#', 'isMemberOfCollection', $parent, FALSE);
    $rels->add('info:fedora/fedora-system:def/model#', 'hasModel', 'islandora:collectionCModel', FALSE);

    $repository->ingestObject($collection_object);
    drupal_set_message(t('Ingested Islandora collection object %t (PID %p).',
      array('%t' => $collection_object->label, '%p' => $collection_object->id)));
    watchdog('islandora_migrate_cdm_collections', t('Ingested Islandora collection object %t (PID %p).',
      array('%t' => $collection_object->label, '%p' => $collection_object->id)), WATCHDOG_INFO);
  }
  catch (Exception $e) {
    drupal_set_message(t('Error ingesting Islandora collection object %t (PID %p).',
      array('%t' => $collection_object->title, '%p' => $collection_object->id), 'error'));
    watchdog('islandora_migrate_cdm_collections', t('Error ingesting Islandora collection object %t (PID %p).',
      array('%t' => $collection_data[1], '%p' => $collection_object->id)), WATCHDOG_ERROR);
  }
}

