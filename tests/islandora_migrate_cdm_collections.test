<?php

/**
 * @file
 * Tests for the Islandora CONTENTdm Collection Migrator.
 */

/**
 * Tests for the presence of collection objects created by this module.
 */
class IslandoraCdmCollMigratorTestCase extends IslandoraCollectionWebTestCase {

  /**
   * Get test information.
   *
   * @see IslandoraWebTestCase::getInfo()
   */
  public static function getInfo() {
    return array(
      'name' => 'CONTENTdm Collections Migrator',
      'description' => 'Tests the CONTENTdm Collection Migrator',
      'group' => 'Islandora CONTENTdm Collection Migrator',
    );
  }

  /**
   * Set up the test environment.
   *
   * @see IslandoraWebTestCase::setUp()
   */
  public function setUp() {
    parent::setUp(array(
      'islandora',
      'islandora_basic_collection',
      'islandora_migrate_cdm_collections',
    ));
  }

  /**
   * Tests the presence of collections created by the drush command.
   */
  public function testForCollections() {
    $user = $this->drupalCreateUser(array_keys(module_invoke_all('permission')));
    $this->drupalLogin($user);

    $path = drupal_get_path('module', 'islandora_migrate_cdm_collections');

    // coder-review throws a warning if we concatenate across lines.
    $drush_cmd = "drush --user=1 cicfc --namespace=islandora ";
    $drush_cmd .= "--parent=islandora:root --input=";
    $drush_cmd .= $path . "/tests/fixtures/data.tsv";
    exec($drush_cmd);

    $data_file = $path . '/tests/fixtures/data.tsv';
    $data = file($data_file);
    $pid = 0;
    foreach ($data as $datum) {
      $pid++;
      // Test URL of collection.
      $coll_path = 'islandora/object/islandora%3A' . $pid;
      $this->drupalGet($coll_path);
      $this->assertResponse(200, 'Response OK');
      $this->assertText('This is collection ' . $pid,
        'The text "collection $pid" appears on collection page.');
    }
  }

}
